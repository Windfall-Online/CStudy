#include <stdio.h>
#include <stdbool.h>
// 오늘의 주제 : stack 구현
// 자료구조(Data structure)
// 자료를 담는 구조
// 자료를 효율적으로 관리하기 위한 구조
// 똑똑한 사람들이 잘 만들어 놨음

// stack 이라는 자료구조는?
// 하노이탑
// stack은? 
// 
// 비어있는 기둥에 원판을 꽂을것
//  1	2	  3	    4     5   6   7   8
// 남->하늘->연두->보라->초->빨->주->노란
// 
// 노란->주황->빨간....
// FILO 구조라고 하는데
// First In Last Out
// 도로를 통행하는데 
// --------------------------
// 펑0 0 0 0 0 0 0 0 0 0 0 0 0 
// --------------------------

int Stk[5];
int _size;
int _last;

void Push(const int value)
{
	Stk[_last] = value;
	_last++;
	_size++;
}

void Pop()
{
	Stk[_last - 1] = 0;
	_last--;
	_size--;
}

int Size()
{
	return _size;
}

int Top()
{
	return Stk[_last-1];
}

bool IsEmpty()
{	// 비어있나요?
	return !_size; //0 !가붙으면? 1이되요 참
}

int main()
{
	for (int i = 1; i <= 5; ++i)
	{
		Push(i);
	}
	// [0][1][2][3][4]
	//  1  2  3  4  5
	// +, -, [] = 연산자
	// 임의접근 Random Access
	// [100(_last)][0][2][3][4]
	// 
	//  
	printf("스택 내용 전체 출력!\n");
	for (int i = 4; i >= 0; --i)
	{
		printf("%d번째 인덱스 : %d \n", i, Stk[i]);
	}
	
	// Stk[i]
	// 임의접근을 했다는소리는?
	
	Pop();
	printf("Pop()을 1회 수행 수 스택 내용 전체 출력\n");
	for (int i = 4; i >= 0; --i)
	{
		printf("%d번째 인덱스 : %d \n", i, Stk[i]);
	}

}

// A호텔에 1방당 1손님
// 방이 100개있음
// 그러면 총 수용 가능 손님은 100명

// 방 = 100개
// 호텔이 비었나요?
// 네~비었습니다
// 손님이 2분
// 방은 2개를 점유
// 호텔이 비었나요?
// 노

// 5개만점
// 최영미 : ★★★반
// 박유정 : ★★★★

// 다음화 예고 : 큐
// 큐는 선입선출
// First In First Out
// 먼저온 사람이 먼저간다!!
// 영화관을 운영함
// 손님의 대기열을 관리하는 자료구조
// 스택을 적용했다!
// 어벤져스 엔드게임 개봉당일 조조
// 1번손님 2번손님 3번손님 4번손님 5번손님 ... 200번손님
// 큐!!! 먼저온 놈이 먼저간다